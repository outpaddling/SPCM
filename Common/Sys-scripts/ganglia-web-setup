#!/bin/sh -e

##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}

os_release=$(auto-os-release)

# selinux attempted fixes
#chcon -R -t httpd_sys_rw_content_t $ganglia_web
#setsebool -P allow_httpd_sys_script_anon_write 1
#restorecon -R -v $ganglia_web
#setsebool -P allow_httpd_anon_write=1
# FIXME: Temporary hack
# OK with pkgsrc apache24
# setenforce Permissive
# setenforce Enforcing

##########################################################################
#   Generate landing page
##########################################################################

LOCALBASE=$(cluster-localbase)

export AUTO_ASK_TAG_PREFIX=ganglia-web-setup-

case $os_release in
FreeBSD-*)
    apache=apache24
    # FIXME: Find a way to auto-detect the current mainstream version
    php=php74
    pkg install -y $apache ganglia-webfrontend $php mod_$php
    web_root=$LOCALBASE/www/apache24/data
    ifconfig=ifconfig
    ;;

RHEL6|RHEL7)
    pkgin -y install apache ganglia-webfrontend
    web_root=$LOCALBASE/share/httpd/htdocs
    ifconfig='ip addr'
    ;;

*)
    printf "$0: Not supported on $os_release.\n"
    exit 1
    ;;

esac

datadir=$LOCALBASE/share/spcm/WWW

cp $datadir/global_styles.css $web_root
cp $datadir/*.gif $web_root || true
chmod a+rX $web_root/*

while [ 0$name = 0 ]; do
    printf "Cluster name as it should appear on the main web page? "
    read name
done
sed -e "s|%%HOSTNAME%%|$name|g" $datadir/index.php > $web_root/index.php

##########################################################################
#   Generate basic Ganglia config
##########################################################################

# Just set up gmond.conf on the head node and distribute to other nodes
# gmond already enabled by cluster-setup on all nodes

gmond_conf=$LOCALBASE/etc/gmond.conf
if [ -e $gmond_conf ]; then
    printf "If you have a working, customized gmond.conf, answer 'n' here.\n"
    read -p "Overwrite gmond.conf? [y]/n " overwrite
    if [ 0$overwrite != 0n ]; then
	auto-backup-file $gmond_conf
	rm -f $gmond_conf
    fi
fi

if [ ! -e $gmond_conf ]; then
    cat << EOM
===

If you have a working gmond.conf, install it in $LOCALBASE/etc now.
Otherwise, one will be generated for you.

===
EOM
    pause

    #cp $LOCALBASE/share/examples/ganglia/gmond.conf $LOCALBASE/etc
    cluster_name=`auto-ask cluster-name "Name of the cluster as it should appear in Ganglia? " $name`
    while [ 0"$cluster_owner" = 0 ]; do
	read -p "Owner of the cluster as it should appear in Ganglia? " cluster_owner
    done
    gmetad_ip=`auto-ask head-ip "IP address of node to receive Ganglia data? " $(auto-get-ip octet)`
    sed \
	-e "s|%%CLUSTER_NAME%%|$cluster_name|g" \
	-e "s|%%CLUSTER_OWNER%%|$cluster_owner|g" \
	-e "s|%%HEAD_NODE_IP%%|$gmetad_ip|g" \
	$datadir/gmond.conf.template > $gmond_conf
fi

chmod 644 $gmond_conf
# vi $gmond_conf

gmetad_conf=$LOCALBASE/etc/gmetad.conf
if [ -e $gmetad_conf ]; then
    printf "If you have a working, customized gmetad.conf, answer 'n' here.\n"
    read -p "Overwrite gmetad.conf? [y]/n " overwrite
    if [ 0$overwrite != 0n ]; then
	auto-backup-file $gmetad_conf
	rm -f $gmetad_conf
    fi
fi

# gmetad just for head node
if [ ! -e $gmetad_conf ]; then
    #cp $LOCALBASE/share/examples/ganglia/gmetad.conf $LOCALBASE/etc
    cat << EOM
===

If you have a working gmetad.conf, install it in $LOCALBASE/etc now.
Otherwise, one will be generated for you.

===
EOM
    pause

    # FIXME: Don't rely on template from spcm as format may
    # change with new ganglia versions
    sed \
	-e "s|%%CLUSTER_NAME%%|$cluster_name|g" \
	-e "s|%%HEAD_NODE_IP%%|$head_node_ip|g" \
	$datadir/gmetad.conf.template > $gmetad_conf
fi

chmod 644 $gmetad_conf
# vi $gmetad_conf

case $os_release in
FreeBSD-*)
    auto-enable-service gmetad $0
    ;;

RHEL6)
    cp $LOCALBASE/share/examples/ganglia/gmetad.init.linux /etc/init.d/gmetad
    chkconfig --add gmetad
    chkconfig gmetad on       # probably redundant
    service gmetad restart
    ;;

RHEL7)
    # FIXME: ganglia pkg should create this
    mkdir -p $LOCALBASE/var/run/
    systemctl disable gmetad.service || true
    systemctl enable $LOCALBASE/share/examples/ganglia/gmetad.service
    systemctl daemon-reload
    systemctl restart gmetad.service
    ;;

esac
pause

##########################################################################
#   Configure apache
##########################################################################

# https://gist.github.com/blacksaildivision/199f9806dc68b2e7cf78713ae4631dfe
# FIXME: Add this to apache package?
case $os_release in
FreeBSD-*)
    httpd_conf=$LOCALBASE/etc/$apache/httpd.conf
    if [ ! -e $httpd_conf.orig ]; then
	printf "Patching httpd.conf...\n"
	mv $httpd_conf $httpd_conf.orig
	awk -f $datadir/patch-apache.awk $httpd_conf.orig > $httpd_conf
    fi
    
    # Add date_default_timezone_set('America/Chicago'); to ganglia.php
    # or update date.timezone in $LOCALBASE/etc/php.ini and restart
    # Apache
    if [ ! -e $LOCALBASE/etc/php.ini ]; then
	cp $LOCALBASE/etc/php.ini-production $LOCALBASE/etc/php.ini
    fi
    
    # Set timezone if not already set
    if ! grep -q '^date.timezone' $LOCALBASE/etc/php.ini; then
	default_zone=$(auto-print-timezone | head -n 1)
	# FIXME: Find a way to validate input
	read -p "Time zone? [$default_zone] " zone
	: ${zone:=$default_zone}
	sed -i '.orig' -e "s|;date.timezone =|date.timezone = $zone|g" \
	    $LOCALBASE/etc/php.ini
    fi
    ;;

RHEL7)
    apache_init_script=$LOCALBASE/etc/apache.service
    if [ ! -e $apache_init_script ]; then
	cat << EOM > $apache_init_script
[Unit]
Description=The Apache HTTP Server
After=network.target

[Service]
Type=forking
ExecStart=$LOCALBASE/sbin/apachectl -k start
ExecReload=$LOCALBASE/sbin/apachectl -k graceful
ExecStop=$LOCALBASE/sbin/apachectl -k graceful-stop
PIDFile=$LOCALBASE/var/run/httpd.pid
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOM
    fi

    systemctl disable apache.service || true
    systemctl enable $apache_init_script || true
    systemctl daemon-reload
    
    httpd_conf=$LOCALBASE/etc/httpd/httpd.conf
    sed -i'' -e 's|DirectoryIndex index.html|DirectoryIndex index.php|' $httpd_conf
    
    # Disable threaded MPM, conflicts with non-threaded mod_php
    sed -i'' -e 's|^LoadModule mpm_event_module|#LoadModule mpm_event_module|' $httpd_conf
    sed -i'' -e 's|#LoadModule mpm_prefork_module|LoadModule mpm_prefork_module|' $httpd_conf
    
    if ! fgrep -q '/ganglia/' $httpd_conf; then
	cat << EOM >> $httpd_conf

# www/ap-php/MESSAGE
LoadModule php7_module lib/httpd/mod_php7.so
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>

# www/ganglia-webfrontend/MESSAGE
Include $LOCALBASE/etc/ganglia/apache.conf
EOM

	# Appears to be unnecessary
	cat << EOM >> /dev/null
<Directory "$LOCALBASE/share/httpd/htdocs/ganglia/">
    Options Indexes FollowSymlinks MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
    <IfModule dir_module>
	DirectoryIndex index.php
    </IfModule>
</Directory>
EOM
    fi
    ;;

esac
# vi $httpd_conf

# Make sure everything is readable by apache_user
chown -Rh ${apache_user}:${apache_user} $LOCALBASE/share/ganglia/
chmod -R a+rX $LOCALBASE/share/ganglia/

case $os_release in
FreeBSD-*)
    # FIXME: Dying here on first run
    # Must come after php5 install, since http.conf was patched
    auto-enable-service $apache $0
    service $apache restart
    ;;

RHEL7)
    systemctl restart apache.service
    ;;

*)
    printf "$0: Not supported on $os_release.\n"
    exit 1
    ;;

esac
